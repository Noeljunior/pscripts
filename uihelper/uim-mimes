#!/bin/python3

from os.path import abspath, expanduser, normpath, join, exists, dirname, realpath, basename, isfile
from os import listdir, remove
from argparse import ArgumentParser
from sys import exit
from shutil import copyfile

mimesout = expanduser("~/.local/share/applications/")
mimesin = join(realpath(dirname(__file__)), "mime")
mimesdb = expanduser("~/.local/share/mime")

# TODO wineaps:
# application/wps-office.dps;application/wps-office.dpt;application/wps-office.ppt;application/wps-office.pot;application/vnd.ms-powerpoint;application/vnd.mspowerpoint;application/mspowerpoint;application/powerpoint;application/x-mspowerpoint;application/wps-office.pptx;application/wps-office.potx;
# application/wps-office.et;application/wps-office.ett;application/wps-office.xls;application/wps-office.xlt;application/vnd.ms-excel;application/msexcel;application/x-msexcel;application/wps-office.xlsx;application/wps-office.xltx;
# application/wps-office.wps;application/wps-office.wpt;application/wps-office.doc;application/wps-office.dot;application/vnd.ms-word;application/msword;application/x-msword;application/msword-template;application/wps-office.docx;application/wps-office.dotx;application/rtf;


# parse the args
parser = ArgumentParser()
parser.add_argument("--list", action="store_true",
                    help='List available')
parser.add_argument("--list-installed", action="store_true",
                    help='List installed')

parser.add_argument("--mimes", metavar="PATH",
                    help='Path to mimes')

parser.add_argument("--add", metavar="NAME", nargs="+",
                    help='Adds from available')
parser.add_argument("--add-all", action="store_true",
                    help='Adds all available')

parser.add_argument("--replace", action="store_true",
                    help='Replaces if target exists')
#parser.add_argument("--replace-all", action="store_true",
#                    help='Removes all and add all available')
parser.add_argument("--remove", metavar="NAME", nargs="+",
                    help='Removes mimes')
#parser.add_argument("--remove-all", action="store_true",
#                    help='Removes all mimes')

args = parser.parse_args()


from subprocess import Popen, PIPE
def srun(command, parallel = False):
    if parallel:
        process = Popen(command, stdout=PIPE, shell=True)
        return process
    else:
        process = Popen(command, stdout=PIPE, shell=True)
        return process.communicate()[0].strip().decode("utf-8"), process.returncode


def findallmimes(path):
    mimes = {}
    for file in listdir(path):
        if not isfile(join(path, file)):
            continue
        fpath = join(path, file)
        #MimeType
        with open(fpath) as f:
            if "MimeType" in f.read():
                mimes[file] = fpath
    return mimes

if args.mimes:
    mimesin = realpath(args.mimes)

if args.list:
    for m in list(findallmimes(mimesin)):
        print(m)

if args.list_installed:
    for m in list(findallmimes(mimesout)):
        print(m)

# remove
torm = []
if args.remove:
    out = findallmimes(mimesout)
    for m in list(dict.fromkeys(args.remove)):
        if m in out:
            remove(out[m])

# add
toadd = []
mimes = findallmimes(mimesin)
if args.add_all:
    toadd = list(mimes)
elif args.add:
    for m in list(dict.fromkeys(args.add)):
        if m in mimes:
            toadd = toadd + [m]

for m in toadd:
    dst = join(mimesout, m)
    if exists(dst) and not args.replace:
        print(m + ": already installed. Skiping it")
        continue

    copyfile(mimes[m], dst)

# update mimes
srun('update-mime-database "{}"'.format(mimesdb))



